import { Col, Result, Row } from "antd";
import { ReactElement, useEffect } from "react";
import useVisibility from "../hooks/useVisibility";
import { useAppState } from "../overmind";
import { NLView } from "../types";
import { Spin } from "./Spin";

export type ItemGridParams<T> = {
	title?: string;
	items?: T[];
	render: (item: object, index: number) => ReactElement;
	loadMore?: () => void;
};

export const ItemGrid: NLView<ItemGridParams<object>> = ({
	items,
	render,
	title,
	loadMore,
}) => {
	const [isVisible, currentElement] = useVisibility<HTMLDivElement>(200);
	const state = useAppState();
	useEffect(() => {
		loadMore && loadMore();
	}, [isVisible]);

	items = items ? items.slice(0, items.length) : [];

	if (state.indicators.isWorking === false && !items.length)
		return <Result icon={<></>}>nothing here</Result>;
	return (
		<>
			{title && <h2 className="header-2">{title}</h2>}
			{items.length ? (
				<Row
					gutter={24}
					wrap={true}
					className="nl-grid-row app-main-full-width-only"
					justify="start"
				>
					{items.map((item, index) => (
<<<<<<< HEAD
						<Col key={`item${index}`} span={8}>{render(item, index)}</Col>
=======
						<Col key={`item${index}`} span={8}>
							{render(item)}
						</Col>
>>>>>>> feature/design
					))}
				</Row>
			) : (
				""
			)}
			<div ref={currentElement}>
				{state.indicators.isWorking === true && loadMore ? (
					<Spin />
				) : (
					""
				)}
			</div>
		</>
	);
};

{
	/* <Masonry columnGutter={18} columnWidth={280} items={post.moods || []} render={({ data }) => <MoodWidget mood={data} />} /> */
}
