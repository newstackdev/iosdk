import { Button } from "antd"
import { useAppState } from "../overmind"
import { Callback, NLView } from "../types";
import { IndeterminateProgress } from "./IndeterminateProgress"

<<<<<<< HEAD
export const ProgressButton: NLView<{ 
    actionName: string,
    type?: "link" | "text" | "ghost" | "default" | "primary" | "dashed" | undefined,
    htmlType?:  "button" | "submit" | "reset" | undefined,
    className?: string,
    onClick?: Callback,
    disabled?: boolean
}> = ({ actionName, type, htmlType, className, children, onClick, disabled }) =>
{
    const state = useAppState();
    const ival = !!state.indicators.specific[actionName];
    return <>
        <IndeterminateProgress inProgress={ival} />
        {
            !ival 
                ? 
                <Button
                    type={type}
                    htmlType={htmlType}
                    className={className}
                    onClick={onClick}
                    disabled={disabled}
                >
                    {children}
                </Button> 
                : 
                "" 
        }
    </>
}
=======
export const ProgressButton: NLView<{
	actionName: string;
	type?:
		| "link"
		| "text"
		| "ghost"
		| "default"
		| "primary"
		| "dashed"
		| undefined;
	htmlType?: "button" | "submit" | "reset" | undefined;
	className?: string;
	onClick?: Callback;
    disabled?: boolean
}> = ({ actionName, type, htmlType, className, children, onClick, disabled }) => {
	const state = useAppState();
	const ival = !!state.indicators.specific[actionName];
	return (
		<>
			<IndeterminateProgress inProgress={ival} />
			{!ival ? (
				<Button
					type={type}
					htmlType={htmlType}
					className={className}
					onClick={onClick}
                    disabled={disabled}
				>
					{children}
				</Button>
			) : (
				""
			)}
		</>
	);
};
>>>>>>> f2c91a0d2d7653fea83b73a701b89ba97a1efbc3
